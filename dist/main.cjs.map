{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEAO,MAAM,yCAAI,GAAG,CAAC,CAAS,EAAE,CAAS,GAAK,CAAC,GAAG,CAAC,AAAC;;ADApD;AEAO,MAAM,yCAAI,GAAG,IAAM,MAAM,AAAC;;;;AHAjC;AKAA;;;;;;AEAA;;AAEO,SAAS,yCAAQ,CAAC,KAAuB,EAAe;IAC7D,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,CAAA,GAAA,qBAAQ,CAAA,CAAC,KAAK,CAAC,IAAI,CAAC,AAAC;IAE7C,CAAA,GAAA,sBAAS,CAAA,CAAC,IAAM;QACd,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;KACrB,EAAE;QAAC,KAAK;KAAC,CAAC,CAAC;IAEZ,qBAAO,iCAAC,KAAG;;YAAC,MAAI;YAAC,IAAI;YAAC,4BAA0B;;MAAM,CAAC;CACxD;;ADVD;;;;AEAA;AAAO,MAAM,yCAAW,GAAG,IAAmB;IAC5C,qBAAO,gCAAC,KAAG;kBAAC,mBAAiB;MAAM,CAAC;CACrC,AAAC;;;;;;;AHCK,MAAM,yCAAI,GAAG,CAAC,YAAkC,GAAK;IAC1D,IAAI,SAAS,GAAuB,IAAI,AAAC;IAEzC,IAAI,OAAO,YAAY,KAAK,QAAQ,EAClC,SAAS,GAAG,YAAY,CAAC;IAG3B,IAAI,OAAO,YAAY,KAAK,QAAQ,EAClC,SAAS,GAAG,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;IAGpD,IAAI,SAAS,KAAK,IAAI,EACpB,CAAA,GAAA,sBAAM,CAAA,eAAC,gCAAC,CAAA,GAAA,yCAAW,CAAA,KAAG,EAAE,SAAS,CAAC,CAAC;CAEtC,AAAC;;ADjBF;;;;AJIO,MAAM,yCAAK,GAAG;UAAE,yCAAI;UAAE,yCAAI;CAAE,AAAC;IACpC,wCAAwB,GAAT;UAAE,yCAAI;CAAE","sources":["src/index.ts","src/utils/index.ts","src/utils/calc.ts","src/utils/test.ts","src/widget/index.ts","src/widget/init.tsx","src/components/index.ts","src/components/SayHello.tsx","src/components/ReactWIdget.tsx"],"sourcesContent":["import { calc, test } from \"utils\";\nimport { init } from \"widget\";\n\nexport * from \"components\";\nexport const utils = { calc, test };\nexport default { init };\n","export * from \"./calc\";\nexport * from \"./test\";\n","export const calc = (a: number, b: number) => a + b;\n","export const test = () => \"test\";\n","export * from \"./init\";\n","import { render } from \"react-dom\";\nimport { ReactWidget } from \"components\";\n\nexport const init = (elementInput: string | HTMLElement) => {\n  let mountNode: HTMLElement | null = null;\n\n  if (typeof elementInput !== \"string\") {\n    mountNode = elementInput;\n  }\n\n  if (typeof elementInput === \"string\") {\n    mountNode = document.getElementById(elementInput);\n  }\n\n  if (mountNode !== null) {\n    render(<ReactWidget />, mountNode);\n  }\n};\n","export * from \"./SayHello\";\nexport * from \"./ReactWIdget\";\n","import { useEffect, useState } from \"react\";\n\nexport function SayHello(props: { name: string }): JSX.Element {\n  const [name, setName] = useState(props.name);\n\n  useEffect(() => {\n    setName(props.name);\n  }, [props]);\n\n  return <div>Hey {name}, say hello to TypeScript.</div>;\n}\n","export const ReactWidget = (): JSX.Element => {\n  return <div>I am React Widget</div>;\n};\n"],"names":[],"version":3,"file":"main.cjs.map"}